<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="smart.stock.mapper.TrusteeTradeMapper">
  <resultMap id="BaseResultMap" type="smart.stock.entity.TrusteeTrade">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="trustee_id" jdbcType="BIGINT" property="trusteeId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="fund_id" jdbcType="BIGINT" property="fundId" />
    <result column="fund_name" jdbcType="VARCHAR" property="fundName" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
    <result column="unit" jdbcType="INTEGER" property="unit" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="total" jdbcType="DECIMAL" property="total" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, trustee_id, name, fund_id, fund_name, start_date, end_date, unit, unit_price, 
    type, total, create_time
  </sql>
  <select id="selectByExample" parameterType="smart.stock.entity.TrusteeTradeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trustee_trade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trustee_trade
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from trustee_trade
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="smart.stock.entity.TrusteeTradeExample">
    delete from trustee_trade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="smart.stock.entity.TrusteeTrade" useGeneratedKeys="true">
    insert into trustee_trade (trustee_id, name, fund_id, 
      fund_name, start_date, end_date, 
      unit, unit_price, type, 
      total, create_time)
    values (#{trusteeId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{fundId,jdbcType=BIGINT}, 
      #{fundName,jdbcType=VARCHAR}, #{startDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP}, 
      #{unit,jdbcType=INTEGER}, #{unitPrice,jdbcType=DECIMAL}, #{type,jdbcType=INTEGER}, 
      #{total,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="smart.stock.entity.TrusteeTrade" useGeneratedKeys="true">
    insert into trustee_trade
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="trusteeId != null">
        trustee_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="fundId != null">
        fund_id,
      </if>
      <if test="fundName != null">
        fund_name,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="trusteeId != null">
        #{trusteeId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="fundId != null">
        #{fundId,jdbcType=BIGINT},
      </if>
      <if test="fundName != null">
        #{fundName,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        #{total,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="smart.stock.entity.TrusteeTradeExample" resultType="java.lang.Long">
    select count(*) from trustee_trade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update trustee_trade
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.trusteeId != null">
        trustee_id = #{record.trusteeId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.fundId != null">
        fund_id = #{record.fundId,jdbcType=BIGINT},
      </if>
      <if test="record.fundName != null">
        fund_name = #{record.fundName,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=INTEGER},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update trustee_trade
    set id = #{record.id,jdbcType=BIGINT},
      trustee_id = #{record.trusteeId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      fund_id = #{record.fundId,jdbcType=BIGINT},
      fund_name = #{record.fundName,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=TIMESTAMP},
      end_date = #{record.endDate,jdbcType=TIMESTAMP},
      unit = #{record.unit,jdbcType=INTEGER},
      unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      type = #{record.type,jdbcType=INTEGER},
      total = #{record.total,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="smart.stock.entity.TrusteeTrade">
    update trustee_trade
    <set>
      <if test="trusteeId != null">
        trustee_id = #{trusteeId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="fundId != null">
        fund_id = #{fundId,jdbcType=BIGINT},
      </if>
      <if test="fundName != null">
        fund_name = #{fundName,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="smart.stock.entity.TrusteeTrade">
    update trustee_trade
    set trustee_id = #{trusteeId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      fund_id = #{fundId,jdbcType=BIGINT},
      fund_name = #{fundName,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      unit = #{unit,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      type = #{type,jdbcType=INTEGER},
      total = #{total,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>