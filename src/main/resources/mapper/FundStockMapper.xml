<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="smart.stock.mapper.FundStockMapper">
  <resultMap id="BaseResultMap" type="smart.stock.entity.FundStock">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="market_type" jdbcType="INTEGER" property="marketType" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="fund_id" jdbcType="BIGINT" property="fundId" />
    <result column="fund_name" jdbcType="VARCHAR" property="fundName" />
    <result column="unit" jdbcType="INTEGER" property="unit" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="total" jdbcType="DECIMAL" property="total" />
    <result column="now_unit_price" jdbcType="DECIMAL" property="nowUnitPrice" />
    <result column="now_total" jdbcType="DECIMAL" property="nowTotal" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, code, market_type, status, fund_id, fund_name, unit, unit_price, total,
    now_unit_price, now_total, create_time
  </sql>
  <select id="selectByExample" parameterType="smart.stock.entity.FundStockExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fund_stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from fund_stock
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from fund_stock
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="smart.stock.entity.FundStockExample">
    delete from fund_stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="smart.stock.entity.FundStock" useGeneratedKeys="true">
    insert into fund_stock (name, code, market_type,
      status, fund_id, fund_name,
      unit, unit_price, total,
      now_unit_price, now_total, create_time
      )
    values (#{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{marketType,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER}, #{fundId,jdbcType=BIGINT}, #{fundName,jdbcType=VARCHAR},
      #{unit,jdbcType=INTEGER}, #{unitPrice,jdbcType=DECIMAL}, #{total,jdbcType=DECIMAL},
      #{nowUnitPrice,jdbcType=DECIMAL}, #{nowTotal,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="smart.stock.entity.FundStock" useGeneratedKeys="true">
    insert into fund_stock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="marketType != null">
        market_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="fundId != null">
        fund_id,
      </if>
      <if test="fundName != null">
        fund_name,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="nowUnitPrice != null">
        now_unit_price,
      </if>
      <if test="nowTotal != null">
        now_total,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="marketType != null">
        #{marketType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="fundId != null">
        #{fundId,jdbcType=BIGINT},
      </if>
      <if test="fundName != null">
        #{fundName,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="total != null">
        #{total,jdbcType=DECIMAL},
      </if>
      <if test="nowUnitPrice != null">
        #{nowUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="nowTotal != null">
        #{nowTotal,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="smart.stock.entity.FundStockExample" resultType="java.lang.Long">
    select count(*) from fund_stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <update id="updateByExampleSelective" parameterType="map">
    update fund_stock
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.marketType != null">
        market_type = #{record.marketType,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.fundId != null">
        fund_id = #{record.fundId,jdbcType=BIGINT},
      </if>
      <if test="record.fundName != null">
        fund_name = #{record.fundName,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=INTEGER},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=DECIMAL},
      </if>
      <if test="record.nowUnitPrice != null">
        now_unit_price = #{record.nowUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.nowTotal != null">
        now_total = #{record.nowTotal,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fund_stock
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      market_type = #{record.marketType,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      fund_id = #{record.fundId,jdbcType=BIGINT},
      fund_name = #{record.fundName,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=INTEGER},
      unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      total = #{record.total,jdbcType=DECIMAL},
      now_unit_price = #{record.nowUnitPrice,jdbcType=DECIMAL},
      now_total = #{record.nowTotal,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="smart.stock.entity.FundStock">
    update fund_stock
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="marketType != null">
        market_type = #{marketType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="fundId != null">
        fund_id = #{fundId,jdbcType=BIGINT},
      </if>
      <if test="fundName != null">
        fund_name = #{fundName,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=DECIMAL},
      </if>
      <if test="nowUnitPrice != null">
        now_unit_price = #{nowUnitPrice,jdbcType=DECIMAL},
      </if>
      <if test="nowTotal != null">
        now_total = #{nowTotal,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="smart.stock.entity.FundStock">
    update fund_stock
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      market_type = #{marketType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      fund_id = #{fundId,jdbcType=BIGINT},
      fund_name = #{fundName,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      total = #{total,jdbcType=DECIMAL},
      now_unit_price = #{nowUnitPrice,jdbcType=DECIMAL},
      now_total = #{nowTotal,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="list" resultType="smart.stock.dto.FundStockDto">
    SELECT
        id,
        NAME,
        CODE,
        market_type as marketType,
        STATUS,
        fund_id as fundId,
        fund_name as fundName,
        unit,
        unit_price as unitPrice,
        total,
        now_unit_price as nowUnitPrice,
        now_total as nowTotal,
        create_time as createTime
    FROM
        fund_stock
    WHERE 1 = 1
    <if test="fundId != null">
      AND fund_id = #{paramFundId}
    </if>
    <if test="paramStatus != null">
      AND status = #{paramStatus}
    </if>
    ORDER BY create_time DESC
  </select>
</mapper>
